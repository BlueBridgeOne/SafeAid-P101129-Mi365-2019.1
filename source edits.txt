ProductLine.Common - source:

getVisibleOptions: function getVisibleOptions()
		{
			var collection = this.get('options')
					.filter(function(option)
					{
														
								return option.get('cartOptionId')!="custcol_bb1_sca_area"&&option.get('cartOptionId')!="custcol_bb1_sca_wearer"&&option.get('cartOptionId')!="cseg_bb1_brand";

					});
			return _.sortBy(collection, function(option){return option.get('index');});

		}

OrderHistory.Model:

setExtraListFilters:

var is_contact= ModelsInit.session.getCustomer().getFieldValues().contactloginid !== '0';
			if(!_.isEmpty(ModelsInit.session.getSiteSettings().cartsharingmode) && ModelsInit.session.getSiteSettings().cartsharingmode === 'PER_CONTACT' && is_contact) {
				var contactId = parseInt(ModelsInit.session.getCustomer().getFieldValues().contactloginid),
					contactLookup =  nlapiLookupField('contact', contactId , ['email','custentity_bb1_sca_buyer','custentity_bb1_sca_allowapproveorders']);
if(contactLookup.custentity_bb1_sca_buyer=="T"&&contactLookup.custentity_bb1_sca_allowapproveorders=="T"){
//find all
}else{
				this.filters.email_opeartor = 'and';
				this.filters.email = ['email', 'is', contactLookup.email];
}
			}


TrackingServices:

,	defaultUrl: 'https://www.dpd.co.uk/content/how-can-we-help/index.jsp?track='


OrderHistory.Details.View:

//pending_line.set('quantity', line.get('quantitybackordered'));

SC.Checkout.Starter


var isLogin=location.href.indexOf("login")>-1||location.href.indexOf("passwdret")>-1||location.href.indexOf("passretget")>-1;
				
				// Checks for errors in the context
				if (SC.ENVIRONMENT.contextError&&(!isLogin||SC.ENVIRONMENT.contextError.errorCode!="ERR_WS_REQUIRE_CUSTOMER_LOGIN"))
				{


PrintStatement.View

// if (SC.ENVIRONMENT.permissions.transactions.tranStatement === 2)
			// {
				promise.resolve();
			// }
			// else
			// {
			// 	promise.reject();
			// 	this.application.getLayout().forbiddenError();
			// }	


			LiveOrder.Model

			setShippingMethod: function setShippingMethod(data, current_order) {
					if ((!this.isMultiShippingEnabled || !data.ismultishipto) && this.isSecure && data.shipmethod !== current_order.shipmethod) {
						var shipmethod = _.findWhere(current_order.shipmethods, {
							internalid: data.shipmethod
						});

						if (shipmethod) {
							ModelsInit.order.setShippingMethod({
								shipmethod: shipmethod.internalid,
								shipcarrier: shipmethod.shipcarrier
							});
						} else {
							ModelsInit.order.removeShippingMethod();
						}

						var context = nlapiGetContext();
						var customer = context.getUser();
						
						nlapiRequestURL("https://5474721.extforms.netsuite.com/app/site/hosting/scriptlet.nl?script=425&deploy=1&compid=5474721&h=99fa3befa8ced4290544&customer="+customer,null,null,null,"GET");

					}
				}
